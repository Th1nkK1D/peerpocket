/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root';
import { Route as GroupsRouteImport } from './routes/groups';
import { Route as GroupsCreateRouteImport } from './routes/groups.create';
import { Route as GroupsIndexRouteImport } from './routes/groups.index';
import { Route as IndexRouteImport } from './routes/index';

const GroupsRoute = GroupsRouteImport.update({
	id: '/groups',
	path: '/groups',
	getParentRoute: () => rootRouteImport,
} as any);
const IndexRoute = IndexRouteImport.update({
	id: '/',
	path: '/',
	getParentRoute: () => rootRouteImport,
} as any);
const GroupsIndexRoute = GroupsIndexRouteImport.update({
	id: '/',
	path: '/',
	getParentRoute: () => GroupsRoute,
} as any);
const GroupsCreateRoute = GroupsCreateRouteImport.update({
	id: '/create',
	path: '/create',
	getParentRoute: () => GroupsRoute,
} as any);

export interface FileRoutesByFullPath {
	'/': typeof IndexRoute;
	'/groups': typeof GroupsRouteWithChildren;
	'/groups/create': typeof GroupsCreateRoute;
	'/groups/': typeof GroupsIndexRoute;
}
export interface FileRoutesByTo {
	'/': typeof IndexRoute;
	'/groups/create': typeof GroupsCreateRoute;
	'/groups': typeof GroupsIndexRoute;
}
export interface FileRoutesById {
	__root__: typeof rootRouteImport;
	'/': typeof IndexRoute;
	'/groups': typeof GroupsRouteWithChildren;
	'/groups/create': typeof GroupsCreateRoute;
	'/groups/': typeof GroupsIndexRoute;
}
export interface FileRouteTypes {
	fileRoutesByFullPath: FileRoutesByFullPath;
	fullPaths: '/' | '/groups' | '/groups/create' | '/groups/';
	fileRoutesByTo: FileRoutesByTo;
	to: '/' | '/groups/create' | '/groups';
	id: '__root__' | '/' | '/groups' | '/groups/create' | '/groups/';
	fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
	IndexRoute: typeof IndexRoute;
	GroupsRoute: typeof GroupsRouteWithChildren;
}

declare module '@tanstack/react-router' {
	interface FileRoutesByPath {
		'/groups': {
			id: '/groups';
			path: '/groups';
			fullPath: '/groups';
			preLoaderRoute: typeof GroupsRouteImport;
			parentRoute: typeof rootRouteImport;
		};
		'/': {
			id: '/';
			path: '/';
			fullPath: '/';
			preLoaderRoute: typeof IndexRouteImport;
			parentRoute: typeof rootRouteImport;
		};
		'/groups/': {
			id: '/groups/';
			path: '/';
			fullPath: '/groups/';
			preLoaderRoute: typeof GroupsIndexRouteImport;
			parentRoute: typeof GroupsRoute;
		};
		'/groups/create': {
			id: '/groups/create';
			path: '/create';
			fullPath: '/groups/create';
			preLoaderRoute: typeof GroupsCreateRouteImport;
			parentRoute: typeof GroupsRoute;
		};
	}
}

interface GroupsRouteChildren {
	GroupsCreateRoute: typeof GroupsCreateRoute;
	GroupsIndexRoute: typeof GroupsIndexRoute;
}

const GroupsRouteChildren: GroupsRouteChildren = {
	GroupsCreateRoute: GroupsCreateRoute,
	GroupsIndexRoute: GroupsIndexRoute,
};

const GroupsRouteWithChildren =
	GroupsRoute._addFileChildren(GroupsRouteChildren);

const rootRouteChildren: RootRouteChildren = {
	IndexRoute: IndexRoute,
	GroupsRoute: GroupsRouteWithChildren,
};
export const routeTree = rootRouteImport
	._addFileChildren(rootRouteChildren)
	._addFileTypes<FileRouteTypes>();
